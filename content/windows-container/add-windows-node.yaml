#!/usr/bin/env ansible-playbook 
---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
  # Thats really ugly
  - ../../ansible/roles/openshift-4-cluster/defaults/main.yml
  - ../../cluster.yml
  vars:
    virt_io_iso: /var/lib/libvirt/images/virtio-win-0.1.185.iso
    windows_iso: /var/lib/libvirt/images/17763.737.190906-2324.rs5_release_svc_refresh_SERVER_EVAL_x64FRE_en-us_1.iso

  tasks:
  - name: Get all VMs
    virt:
      command: list_vms
    register: all_vms

  - name: Build regexp
    set_fact:
      regexp: "{{ cluster_name }}-compute"
      compute_number: 0  

  - name: Build compute_number
    set_fact:
      compute_number: "{{ (all_vms.list_vms | select('match', regexp) | list | sort)[-1].split('-')[-1] | int + 1 }}"
    when: ( all_vms.list_vms | select('match', regexp) | list | length > 0 )

  - name: Build vm_*
    set_fact:
      vm_instance_name: "{{ cluster_name }}-compute-{{ compute_number }}"
      vm_network: "{{ cluster_name }}"
      vm_mac_address: "52:54:00:{{ '%02x' % vn_subnet.split('.')[1]|int }}:{{ '%02x' % vn_subnet.split('.')[2]|int }}:{{ '%02x' % compute_number|int }}"
      vm_vcpu: "4"
      vm_special_cpu: "<cpu mode='host-passthrough'></cpu>"
      vm_memory_size: "8192"
      vm_memory_unit: "MiB"
      vm_root_disk_size: "200G"

  - name: "Add compute node to static dhcp config"
    virt_net:
      name: "{{ cluster_name }}"
      command: modify
      xml: |
        <host mac='{{vm_mac_address}}' name='compute-{{ compute_number }}.compute.local' ip='{{ vn_subnet.split('.')[:3] | join('.')}}.{{ 10 + master_count|int + compute_number|int }}' />

  - name: Create disk for {{ vm_instance_name }}
    command: "qemu-img create -f qcow2 /var/lib/libvirt/images/{{ vm_instance_name }}.qcow2 {{ vm_root_disk_size }}"
    args:
      creates: "/var/lib/libvirt/images/{{ vm_instance_name }}.qcow2"

  - name: Define VirtualMachine {{ vm_instance_name }}
    virt:
      # name: "{{ vm_instance_name }}"
      command: define
      xml: |
        <domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>
          <name>{{ vm_instance_name }}</name>
          <uuid>{{ lookup('lines','uuidgen') }}</uuid>
          <metadata>
            <kvirt:info xmlns:kvirt="kvirt">
              <kvirt:profile>kvirt</kvirt:profile>
              <kvirt:plan>{{ cluster_name }}</kvirt:plan>
            </kvirt:info>
          </metadata>
          <memory unit='{{ vm_memory_unit }}'>{{ vm_memory_size }}</memory>
          <currentMemory unit='{{ vm_memory_unit }}'>{{ vm_memory_size }}</currentMemory>
          <vcpu>{{ vm_vcpu }}</vcpu>
        {% if vm_special_cpu is defined and vm_special_cpu|length %}
          {{ vm_special_cpu }}
        {% endif %}
          <os>
            <type arch="x86_64">hvm</type>
            <boot dev="cdrom"/>
            <boot dev="hd"/>
          </os>
          <features>
            <acpi/>
            <apic/>
            <pae/>
            <hyperv>
              <relaxed state='on'/>
              <vapic state='on'/>
              <spinlocks state='on' retries='8191'/>
            </hyperv>
          </features>
          <clock offset="utc">
            <timer name="rtc" tickpolicy="catchup"/>
            <timer name="pit" tickpolicy="delay"/>
            <timer name="hpet" present="no"/>
            <timer name='hypervclock' present='yes'/>
          </clock>
          <pm>
            <suspend-to-mem enabled="no"/>
            <suspend-to-disk enabled="no"/>
          </pm>
          <devices>
            <emulator>/usr/libexec/qemu-kvm</emulator>
            <disk type='file' device='disk'>
              <driver name='qemu' type='qcow2'/>
              <source file='/var/lib/libvirt/images/{{ vm_instance_name }}.qcow2'/>
              <target dev='vda' bus='virtio'/>
            </disk>
            <disk type="file" device="cdrom">
              <driver name="qemu" type="raw"/>
              <source file="{{ windows_iso }}"/>
              <target dev="hda" bus="ide"/>
              <readonly/>
            </disk>
            <disk type="file" device="cdrom">
              <driver name="qemu" type="raw"/>
              <source file="{{ virt_io_iso }}"/>
              <target dev="hdb" bus="ide"/>
              <readonly/>
            </disk>
            <controller type="usb" index="0" model="ich9-ehci1"/>
            <controller type="usb" index="0" model="ich9-uhci1">
              <master startport="0"/>
            </controller>
            <controller type="usb" index="0" model="ich9-uhci2">
              <master startport="2"/>
            </controller>
            <controller type="usb" index="0" model="ich9-uhci3">
              <master startport="4"/>
            </controller>
            <interface type='network'>
              <mac address='{{ vm_mac_address  }}'/>
              <source network='{{ vm_network }}'/>
              <model type='virtio'/>
            </interface>
            <graphics type="vnc" port="-1"/>
            <console type="pty"/>
            <rng model="virtio">
              <backend model="random">/dev/urandom</backend>
            </rng>
          </devices>
        </domain>

  - name: Start VirtualMachine {{ vm_instance_name }}
    virt: 
      name: "{{ vm_instance_name }}"
      state: running
