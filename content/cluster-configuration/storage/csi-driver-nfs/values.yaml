
image:
    baseRepo: registry.k8s.io
    nfs:
        repository: quay.io/rbohne/nfsplugin
        tag: canary
        pullPolicy: IfNotPresent
    csiProvisioner:
        repository: quay.io/rbohne/csi-provisioner
        tag: v5.1.0
        pullPolicy: IfNotPresent
    csiResizer:
        repository: quay.io/rbohne/csi-resizer
        tag: v1.12.0
        pullPolicy: IfNotPresent
    csiSnapshotter:
        repository: quay.io/rbohne/csi-snapshotter
        tag: v8.2.0
        pullPolicy: IfNotPresent
    livenessProbe:
        repository: quay.io/rbohne/livenessprobe
        tag: v2.14.0
        pullPolicy: IfNotPresent
    nodeDriverRegistrar:
        repository: quay.io/rbohne/csi-node-driver-registrar
        tag: v2.12.0
        pullPolicy: IfNotPresent
    externalSnapshotter:
        repository: quay.io/rbohne/snapshot-controller
        tag: v8.2.0
        pullPolicy: IfNotPresent

# skopeo copy --all docker://registry.k8s.io/sig-storage/csi-resizer:v1.12.0 docker://quay.io/rbohne/csi-resizer:v1.12.0
# skopeo copy --all docker://registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0 docker://quay.io/rbohne/csi-snapshotter:v8.2.0
# skopeo copy --all docker://registry.k8s.io/sig-storage/livenessprobe:v2.14.0 docker://quay.io/rbohne/livenessprobe:v2.14.0
# skopeo copy --all docker://registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.12.0 docker://quay.io/rbohne/csi-node-driver-registrar:v2.12.0
# skopeo copy --all docker://registry.k8s.io/sig-storage/snapshot-controller:v8.2.0 docker://quay.io/rbohne/snapshot-controller:v8.2.0

controller:
  resources:
    csiProvisioner:
      limits:
        memory: 1024Mi
    csiSnapshotter:
      limits:
        memory: 1024Mi
    livenessProbe:
      limits:
        memory: 1024Mi
    nfs:
      limits:
        memory: 1024Mi

externalSnapshotter:
  enabled: true
  # Create volume snapshot CRDs.
  customResourceDefinitions:
    enabled: false   #if set true, VolumeSnapshot, VolumeSnapshotContent and VolumeSnapshotClass CRDs will be created. Set it false, If they already exist in cluster.

## StorageClass resource example:
storageClass:
  create: true
  name: nfs-csi
  annotations:
    storageclass.kubevirt.io/is-default-virt-class: "true"
    storageclass.kubernetes.io/is-default-class: "true"
  parameters:
    server: 10.32.97.1 
    share:  /coe_stormshift_ocp1      
    subDir: ${pvc.metadata.namespace}-${pvc.metadata.name}-${pv.metadata.name}
