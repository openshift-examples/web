apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: github-add-labels
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Git
    tekton.dev/tags: github
    tekton.dev/displayName: "add github label"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task will add a label to an issue in Github.

    A collection of tasks to help working with the Github API.
    Most tasks would expect to have a secret set in the kubernetes
    secret `github` with a Github token in the key `token`.

  params:
  - name: GITHUB_HOST_URL
    description: |
      The GitHub host, adjust this if you run a GitHub enteprise.
    default: "api.github.com"
    type: string
  - name: API_PATH_PREFIX
    description: |
      The API path prefix, GitHub Enterprise has a prefix e.g. /api/v3
    default: ""
    type: string
  - name: REQUEST_URL
    description: |
      The GitHub issue or pull request URL where we want to add labels.
    type: string
  - name: LABELS
    description: |
      The actual labels to add.
    type: array
  - name: PAC_GITHUB_SECRET
    description: |
      Name of the secret holding the github-token.
    type: string
  - name: PAC_GITHUB_SECRET_KEY
    description: |
      Name of the secret key holding the github-token.
    type: string
    default: .git-credentials
  steps:
    - name: add-labels
      image: registry.access.redhat.com/ubi8/ubi:8.2
      args:
        - "$(params.LABELS)"
      script: |
        #!/usr/libexec/platform-python
        import json
        import os
        import sys
        import http.client
        import urllib.parse

        split_url = urllib.parse.urlparse(
            "$(params.REQUEST_URL)").path.split("/")

        # This will convert https://github.com/foo/bar/pull/202 to
        # api url path /repos/foo/issues/202

        api_url = "$(params.API_PATH_PREFIX)" + "/repos/" + "/".join(split_url[1:3]) + \
                  "/issues/" + split_url[-1]

        # Get array of Labels
        labels = sys.argv[1: ]

        data = {
            "labels": labels
        }

        print("Sending the data to GitHub: ")
        print(data)
        conn = http.client.HTTPSConnection("$(params.GITHUB_HOST_URL)")

        bearer = urllib.parse.urlparse(os.environ["GIT_CREDENTIALS"])

        r = conn.request(
            "POST",
            api_url + "/labels",
            body=json.dumps(data),
            headers={
                "User-Agent": "TektonCD, the peaceful cat",
                "Authorization": "Bearer " + bearer.password,
            })

        resp = conn.getresponse()
        if not str(resp.status).startswith("2"):
            print("Error: %d" % (resp.status))
            print(resp.read())
        else:
          print("Labels has been added to "
                "$(params.REQUEST_URL)")

      env:
        - name: GIT_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: $(params.PAC_GITHUB_SECRET)
              key: $(params.PAC_GITHUB_SECRET_KEY)
